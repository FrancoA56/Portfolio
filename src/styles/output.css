/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */
@tailwind base;
@tailwind components;
.pointer-events-none {
  pointer-events: none;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.z-10 {
  z-index: 10;
}
.z-50 {
  z-index: 50;
}
.col-span-2 {
  grid-column: span 2 / span 2;
}
.col-span-3 {
  grid-column: span 3 / span 3;
}
.mx-auto {
  margin-inline: auto;
}
.my-auto {
  margin-block: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.w-11\/12 {
  width: calc(11/12 * 100%);
}
.w-\[24px\] {
  width: 24px;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.flex-grow {
  flex-grow: 1;
}
.translate-x-full {
  --tw-translate-x: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.cursor-pointer {
  cursor: pointer;
}
.appearance-none {
  appearance: none;
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-start {
  justify-content: flex-start;
}
.justify-items-center {
  justify-items: center;
}
.rounded-\[0\.4375rem\] {
  border-radius: 0.4375rem;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.bg-transparent {
  background-color: transparent;
}
.bg-cover {
  background-size: cover;
}
.text-center {
  text-align: center;
}
.text-end {
  text-align: end;
}
.text-justify {
  text-align: justify;
}
.text-start {
  text-align: start;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.before\:pointer-events-none {
  &::before {
    content: var(--tw-content);
    pointer-events: none;
  }
}
.before\:absolute {
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
}
.before\:rounded-full {
  &::before {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
}
.before\:bg-transparent {
  &::before {
    content: var(--tw-content);
    background-color: transparent;
  }
}
.before\:content-\[\'\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:z-\[2\] {
  &::after {
    content: var(--tw-content);
    z-index: 2;
  }
}
.after\:-mt-\[0\.1875rem\] {
  &::after {
    content: var(--tw-content);
    margin-top: calc(0.1875rem * -1);
  }
}
.after\:rounded-full {
  &::after {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
}
.after\:border-none {
  &::after {
    content: var(--tw-content);
    --tw-border-style: none;
    border-style: none;
  }
}
.after\:shadow-\[0_0px_3px_0_rgb\(0_0_0_\/_7\%\)\,_0_2px_2px_0_rgb\(0_0_0_\/_4\%\)\] {
  &::after {
    content: var(--tw-content);
    --tw-shadow: 0 0px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 7%)), 0 2px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 4%));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.after\:transition-\[background-color_0\.2s\,transform_0\.2s\] {
  &::after {
    content: var(--tw-content);
    transition-property: background-color 0.2s,transform 0.2s;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
  }
}
.after\:content-\[\'\'\] {
  &::after {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
.checked\:after\:absolute {
  &:checked {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
}
.checked\:after\:z-\[2\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      z-index: 2;
    }
  }
}
.checked\:after\:-mt-\[3px\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      margin-top: calc(3px * -1);
    }
  }
}
.checked\:after\:ml-\[1\.0625rem\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      margin-left: 1.0625rem;
    }
  }
}
.checked\:after\:rounded-full {
  &:checked {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
}
.checked\:after\:border-none {
  &:checked {
    &::after {
      content: var(--tw-content);
      --tw-border-style: none;
      border-style: none;
    }
  }
}
.checked\:after\:shadow-\[0_3px_1px_-2px_rgba\(0\,0\,0\,0\.2\)\,_0_2px_2px_0_rgba\(0\,0\,0\,0\.14\)\,_0_1px_5px_0_rgba\(0\,0\,0\,0\.12\)\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      --tw-shadow: 0 3px 1px -2px var(--tw-shadow-color, rgba(0,0,0,0.2)), 0 2px 2px 0 var(--tw-shadow-color, rgba(0,0,0,0.14)), 0 1px 5px 0 var(--tw-shadow-color, rgba(0,0,0,0.12));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.checked\:after\:transition-\[background-color_0\.2s\,transform_0\.2s\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      transition-property: background-color 0.2s,transform 0.2s;
      transition-timing-function: var(--tw-ease, ease);
      transition-duration: var(--tw-duration, 0s);
    }
  }
}
.checked\:after\:content-\[\'\'\] {
  &:checked {
    &::after {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
}
.hover\:scale-110 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:scale-125 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 125%;
      --tw-scale-y: 125%;
      --tw-scale-z: 125%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:cursor-pointer {
  &:hover {
    @media (hover: hover) {
      cursor: pointer;
    }
  }
}
.focus\:bg-transparent {
  &:focus {
    background-color: transparent;
  }
}
.focus\:ring-0 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus\:before\:scale-100 {
  &:focus {
    &::before {
      content: var(--tw-content);
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.focus\:before\:opacity-\[0\.12\] {
  &:focus {
    &::before {
      content: var(--tw-content);
      opacity: 0.12;
    }
  }
}
.focus\:before\:shadow-\[3px_-1px_0px_13px_rgba\(0\,0\,0\,0\.6\)\] {
  &:focus {
    &::before {
      content: var(--tw-content);
      --tw-shadow: 3px -1px 0px 13px var(--tw-shadow-color, rgba(0,0,0,0.6));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.focus\:before\:transition-\[box-shadow_0\.2s\,transform_0\.2s\] {
  &:focus {
    &::before {
      content: var(--tw-content);
      transition-property: box-shadow 0.2s,transform 0.2s;
      transition-timing-function: var(--tw-ease, ease);
      transition-duration: var(--tw-duration, 0s);
    }
  }
}
.focus\:after\:absolute {
  &:focus {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
}
.focus\:after\:z-\[1\] {
  &:focus {
    &::after {
      content: var(--tw-content);
      z-index: 1;
    }
  }
}
.focus\:after\:block {
  &:focus {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
}
.focus\:after\:rounded-full {
  &:focus {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
}
.focus\:after\:content-\[\'\'\] {
  &:focus {
    &::after {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
}
.checked\:focus\:before\:ml-\[1\.0625rem\] {
  &:checked {
    &:focus {
      &::before {
        content: var(--tw-content);
        margin-left: 1.0625rem;
      }
    }
  }
}
.checked\:focus\:before\:scale-100 {
  &:checked {
    &:focus {
      &::before {
        content: var(--tw-content);
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
}
.checked\:focus\:before\:shadow-\[3px_-1px_0px_13px_\#3b71ca\] {
  &:checked {
    &:focus {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 3px -1px 0px 13px var(--tw-shadow-color, #3b71ca);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
}
.checked\:focus\:before\:transition-\[box-shadow_0\.2s\,transform_0\.2s\] {
  &:checked {
    &:focus {
      &::before {
        content: var(--tw-content);
        transition-property: box-shadow 0.2s,transform 0.2s;
        transition-timing-function: var(--tw-ease, ease);
        transition-duration: var(--tw-duration, 0s);
      }
    }
  }
}
.active\:no-underline {
  &:active {
    text-decoration-line: none;
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:bg-transparent {
  &:disabled {
    background-color: transparent;
  }
}
.dark\:hidden {
  @media (prefers-color-scheme: dark) {
    display: none;
  }
}
.dark\:inline {
  @media (prefers-color-scheme: dark) {
    display: inline;
  }
}
.dark\:hover\:bg-transparent {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
}
.dark\:focus\:before\:shadow-\[3px_-1px_0px_13px_rgba\(255\,255\,255\,0\.4\)\] {
  @media (prefers-color-scheme: dark) {
    &:focus {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 3px -1px 0px 13px var(--tw-shadow-color, rgba(255,255,255,0.4));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
}
.dark\:checked\:focus\:before\:shadow-\[3px_-1px_0px_13px_\#3b71ca\] {
  @media (prefers-color-scheme: dark) {
    &:checked {
      &:focus {
        &::before {
          content: var(--tw-content);
          --tw-shadow: 3px -1px 0px 13px var(--tw-shadow-color, #3b71ca);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
